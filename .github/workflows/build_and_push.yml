name: Docker build and push

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ECR_REGISTRY: public.ecr.aws
  ECR_REGISTRY_ALIAS: sonicgarden
  ECR_REPOSITORY: ruby

jobs:
  # ruby_version 共通化のためのジョブ
  # 参考: https://docs.github.com/en/actions/how-tos/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow#example-using-an-output-to-define-two-matrices
  define_matrix:
    runs-on: ubuntu-latest
    outputs:
      ruby_versions: ${{ steps.ruby_versions.outputs.ruby_versions }}
    steps:
      - uses: actions/checkout@v4
      - name: Define Ruby versions
        id: ruby_versions
        run: echo "ruby_versions=$(jq -c < ruby_versions.json)" >> "$GITHUB_OUTPUT" # 1行にする必要があるので "jq -c" を実施
        working-directory: .github/workflows/

  build_and_push:
    timeout-minutes: 30
    needs:
      - define_matrix
    strategy:
      matrix:
        ruby_version: ${{ fromJSON(needs.define_matrix.outputs.ruby_versions) }}
        platform:
          - { runner: 'linux-arm64-public', arch: 'arm64' }
          - { runner: 'ubuntu-24.04', arch: 'amd64' }
    permissions:
      id-token: write
      contents: read

    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHubActions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public

      # manifest で結合するため、buildx を利用せずにビルドする
      - name: Build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          platforms: linux/${{ matrix.platform.arch }}
          push: true
          no-cache: true
          build-args: |
            RUBY_VERSION=${{ matrix.ruby_version }}
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REGISTRY_ALIAS }}/${{ env.ECR_REPOSITORY }}:${{ matrix.ruby_version }}-${{ matrix.platform.arch }}

  create_manifest:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build_and_push
      - define_matrix
    strategy:
      matrix:
        ruby_version: ${{ fromJSON(needs.define_matrix.outputs.ruby_versions) }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHubActions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public

      - name: Create and push manifest
        env:
          ECR_URL: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REGISTRY_ALIAS }}/${{ env.ECR_REPOSITORY }}
        run: |
          docker manifest create $ECR_URL:${{ matrix.ruby_version }} $ECR_URL:${{ matrix.ruby_version }}-arm64 $ECR_URL:${{ matrix.ruby_version }}-amd64
          docker manifest annotate $ECR_URL:${{ matrix.ruby_version }} $ECR_URL:${{ matrix.ruby_version }}-arm64 --os linux --arch arm64
          docker manifest annotate $ECR_URL:${{ matrix.ruby_version }} $ECR_URL:${{ matrix.ruby_version }}-amd64 --os linux --arch amd64
          docker manifest push $ECR_URL:${{ matrix.ruby_version }}
