name: Docker build and push(test)

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ECR_REGISTRY: public.ecr.aws
  ECR_REGISTRY_ALIAS: sonicgarden
  ECR_REPOSITORY: ruby

jobs:
  # ruby_version 共通化のためのジョブ
  # 参考: https://docs.github.com/en/actions/how-tos/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow#example-using-an-output-to-define-two-matrices
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      ruby_versions: ${{ steps.ruby_versions.outputs.ruby_versions }}
    steps:
      - uses: actions/checkout@v4
      - name: Define Ruby versions
        id: ruby_versions
        run: echo "ruby_versions=$(cat ruby_versions_for_test.json | jq -c)" >> "$GITHUB_OUTPUT" # 1行にする必要があるので "jq -c" を実施
        working-directory: .github/workflows/

  build_and_push:
    timeout-minutes: 30
    needs:
      - define-matrix
    strategy:
      matrix:
        ruby_version: ${{ fromJSON(needs.define-matrix.outputs.ruby_versions) }}
        platform:
          - { runner: 'linux-arm64-public', image: 'linux/arm64', tag_suffix: 'arm64' }
          - { runner: 'ubuntu-24.04', image: 'linux/amd64', tag_suffix: 'amd64' }

    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Public ECR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          # platforms: ${{ matrix.platform.image }}
          push: true
          no-cache: true
          build-args: |
            RUBY_VERSION=${{ matrix.ruby_version }}
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REGISTRY_ALIAS }}/${{ env.ECR_REPOSITORY }}:${{ matrix.ruby_version }}-${{ matrix.platform.tag_suffix }}

  create_manifest:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build_and_push
      - define-matrix
    strategy:
      matrix:
        ruby_version: ${{ fromJSON(needs.define-matrix.outputs.ruby_versions) }}

    steps:
      - name: Login to Public ECR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create and push manifest
        env:
          ECR_URL: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REGISTRY_ALIAS }}/${{ env.ECR_REPOSITORY }}
        run: |
          docker manifest create $ECR_URL:${{ matrix.ruby_version }} $ECR_URL:${{ matrix.ruby_version }}-arm64 $ECR_URL:${{ matrix.ruby_version }}-amd64
          docker manifest annotate $ECR_URL:${{ matrix.ruby_version }} $ECR_URL:${{ matrix.ruby_version }}-arm64 --os linux --arch arm64
          docker manifest annotate $ECR_URL:${{ matrix.ruby_version }} $ECR_URL:${{ matrix.ruby_version }}-amd64 --os linux --arch amd64
          docker manifest push $ECR_URL:${{ matrix.ruby_version }}
